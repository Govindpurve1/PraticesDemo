//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GovindEventReminderService.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EventDBEntities16 : DbContext
    {
        public EventDBEntities16()
            : base("name=EventDBEntities16")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblBirthdayDetail1> tblBirthdayDetail1 { get; set; }
        public virtual DbSet<tblUPersonalDetail> tblUPersonalDetails { get; set; }
        public virtual DbSet<tblUserAccountDetail> tblUserAccountDetails { get; set; }
        public virtual DbSet<tblUserAddressDetail> tblUserAddressDetails { get; set; }
    
        public virtual ObjectResult<SP_BindRelationship> SP_BindRelationship()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BindRelationship>("SP_BindRelationship");
        }
    
        public virtual ObjectResult<Nullable<int>> SP_CheckEmailAvailability(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_CheckEmailAvailability", emailParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_CheckUserAccountStatus(string email, Nullable<int> status)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_CheckUserAccountStatus", emailParameter, statusParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_CheckUserByEmailAnswer(string email, string answer)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var answerParameter = answer != null ?
                new ObjectParameter("Answer", answer) :
                new ObjectParameter("Answer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_CheckUserByEmailAnswer", emailParameter, answerParameter);
        }
    
        public virtual ObjectResult<tblUserAccountDetail> SP_CheckUserLogin(string email, string password)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tblUserAccountDetail>("SP_CheckUserLogin", emailParameter, passwordParameter);
        }
    
        public virtual ObjectResult<tblUserAccountDetail> SP_CheckUserLogin(string email, string password, MergeOption mergeOption)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tblUserAccountDetail>("SP_CheckUserLogin", mergeOption, emailParameter, passwordParameter);
        }
    
        public virtual ObjectResult<SP_GetHintQuestion_Result> SP_GetHintQuestion(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetHintQuestion_Result>("SP_GetHintQuestion", emailParameter);
        }
    
        public virtual int SP_UserApproval(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UserApproval", emailParameter);
        }
    
        public virtual int SP_UserRegisteration(string email, string password, Nullable<System.DateTime> dateOfRegistraion, Nullable<bool> isApproved, Nullable<bool> isCancelled, string firstName, string middleName, string lastName, string dateOfBirth, string gender, Nullable<bool> isAgeScreet, string mobileNo)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var dateOfRegistraionParameter = dateOfRegistraion.HasValue ?
                new ObjectParameter("DateOfRegistraion", dateOfRegistraion) :
                new ObjectParameter("DateOfRegistraion", typeof(System.DateTime));
    
            var isApprovedParameter = isApproved.HasValue ?
                new ObjectParameter("IsApproved", isApproved) :
                new ObjectParameter("IsApproved", typeof(bool));
    
            var isCancelledParameter = isCancelled.HasValue ?
                new ObjectParameter("IsCancelled", isCancelled) :
                new ObjectParameter("IsCancelled", typeof(bool));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth != null ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var isAgeScreetParameter = isAgeScreet.HasValue ?
                new ObjectParameter("IsAgeScreet", isAgeScreet) :
                new ObjectParameter("IsAgeScreet", typeof(bool));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UserRegisteration", emailParameter, passwordParameter, dateOfRegistraionParameter, isApprovedParameter, isCancelledParameter, firstNameParameter, middleNameParameter, lastNameParameter, dateOfBirthParameter, genderParameter, isAgeScreetParameter, mobileNoParameter);
        }
    
        public virtual int SP_UpdatePasswordByEmail(string email, string password)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdatePasswordByEmail", emailParameter, passwordParameter);
        }
    }
}
